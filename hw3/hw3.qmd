---
title: "Biostat 203B Homework 3"
subtitle: "Due Feb 23 @ 11:59PM"
author: "Ruidong Zhang 206294444"
format:
  html:
    theme: cosmo
    embed-resources: true
    number-sections: false
    toc: true
    toc-depth: 4
    toc-location: left
    code-fold: false
execute:
  eval: false    
---

Display machine information for reproducibility:
```{r}
sessionInfo()
```

Load necessary libraries (you can add more as needed).
```{r setup}
rm(list = ls())
library(arrow)
library(memuse)
library(pryr)
library(R.utils)
library(tidyverse)
```

Display your machine memory.
```{r}
memuse::Sys.meminfo()
```

In this exercise, we use tidyverse (ggplot2, dplyr, etc) to explore the [MIMIC-IV](https://mimic.mit.edu/docs/iv/) data introduced in [homework 1](https://ucla-biostat-203b.github.io/2024winter/hw/hw1/hw1.html) and to build a cohort of ICU stays.

## Q1. Visualizing patient trajectory

Visualizing a patient's encounters in a health care system is a common task in clinical data analysis. In this question, we will visualize a patient's ADT (admission-discharge-transfer) history and ICU vitals in the MIMIC-IV data.

### Q1.1 ADT history

A patient's ADT history records the time of admission, discharge, and transfer in the hospital. This figure shows the ADT history of the patient with `subject_id` 10001217 in the MIMIC-IV data. The x-axis is the calendar time, and the y-axis is the type of event (ADT, lab, procedure). The color of the line segment represents the care unit. The size of the line segment represents whether the care unit is an ICU/CCU. The crosses represent lab events, and the shape of the dots represents the type of procedure. The title of the figure shows the patient's demographic information and the subtitle shows top 3 diagnoses.

![](10001217_adt.png)
Do a similar visualization for the patient with `subject_id` 10013310 using ggplot.

Hint: We need to pull information from data files `patients.csv.gz`, `admissions.csv.gz`, `transfers.csv.gz`, `labevents.csv.gz`, `procedures_icd.csv.gz`, `diagnoses_icd.csv.gz`, `d_icd_procedures.csv.gz`, and `d_icd_diagnoses.csv.gz`. For the big file `labevents.csv.gz`, use the Parquet format you generated in Homework 2. For reproducibility, make the Parquet folder `labevents_pq` available at the current working directory `hw3`, for example, by a symbolic link. Make your code reproducible.

***Answer***

Patient of Interest:
```{r}
sid <- 10001217
```

Import the necessary data: transfer
```{r}
#|eval = true
sid_adt <- read_csv("~/mimic/hosp/transfers.csv.gz") %>%
  filter(subject_id == sid) %>%
  collect() %>%
  print(width = Inf)
```
Import the necessary data: labevents
```{r}
#|eval = true
sid_lab <- arrow::open_dataset("~/labevents_pq") %>%
  filter(subject_id == sid) %>%
  collect() %>% 
  print(width = Inf)
```

```{r}
#|eval = true
sid_pcd <- read_csv("~/mimic/hosp/procedures_icd.csv.gz") %>%
  filter(subject_id == sid) %>%
  mutate(chartdate = as.POSIXct(chartdate)) %>%
  left_join(read_csv("~/mimic/hosp/d_icd_procedures.csv.gz") %>%
              select(icd_code, long_title), by = "icd_code") %>%
  collect() %>%
  
  print(width = Inf)
```

```{r}
#|eval = true
sid_dcd <- read_csv("~/mimic/hosp/diagnoses_icd.csv.gz") %>%
  filter(subject_id == sid) %>%
  print(width = Inf)
```

```{r}
#|eval = true
sid_patients <- read_csv("~/mimic/hosp/patients.csv.gz") %>%
  filter(subject_id == sid) %>%
  print(width = Inf)
```

```{r}
#|eval = true
sid_adm <- read_csv("~/mimic/hosp/admissions.csv.gz") %>%
  filter(subject_id == sid) %>%
  print(width = Inf)
```


```{r}
#|eval = true
sid_dip <- read_csv("~/mimic/hosp/d_icd_procedures.csv.gz") %>%
  collect() %>%
  print(width = Inf)
```

```{r}
#|eval = true
sid_did <- read_csv("~/mimic/hosp/d_icd_diagnoses.csv.gz") %>%
  left_join(sid_dcd, by = "icd_code") %>%
  group_by(subject_id, icd_code) %>%
  filter(row_number() == 1, seq_num <= 3) %>%
  ungroup() %>%
  collect() %>%
  print(width = Inf)
```



```{r}
#|eval = true
# Visualization
library(ggplot2)

ggplot() +
  geom_segment(data = sid_adt, aes(x = intime, xend = outtime, y = "ADT", 
                                   yend = "ADT", color = careunit, 
                                   linewidth = str_detect(careunit, "ICU|CCU"))) +
  
  geom_point(data = sid_lab, aes(x = charttime), y = "Lab", shape = 3) +
    
  geom_point(data = sid_pcd,
             aes(x = chartdate, y = "Procedure", shape = long_title)) +
  
  labs(x = "Calendar Time", y = "Event Type", 
       title = paste("Patient ", sid,
                     ", ", sid_patients$gender, ", ",
                     sid_patients$anchor_age, " years old, ", 
                     tolower(sid_adm$race)), 
       subtitle = paste(paste(tolower(sid_did$long_title[1:3]), collapse = "\n")),
       shape = "Procedure") +
  
  scale_color_discrete(name = "Care Unit") +
    
  scale_y_discrete(limits = c("Procedure", "Lab", "ADT")) +
  
  theme(legend.position = "bottom",
        legend.box = "vertical")
```
### Q1.2 ICU stays

ICU stays are a subset of ADT history. This figure shows the vitals of the patient `10001217` during ICU stays. The x-axis is the calendar time, and the y-axis is the value of the vital. The color of the line represents the type of vital. The facet grid shows the abbreviation of the vital and the stay ID.

![](10001217_icu.png)

***Answer***

```{r}
#|eval = false
sid <- 10001217
```

Import the necessary data: chartevents
```{r}
#|eval = false
sid_chart <- arrow::open_dataset("~/chartevents_pq") %>%
  filter(subject_id == sid) %>%
  collect() %>%
  print(width = Inf)
```

```{r}
#|eval = false
sid_ditems <- read_csv("~/mimic/icu/d_items.csv.gz") %>%
  filter(abbreviation %in% c("HR", "NBPd", "NBPs", "RR", "Temperature F")) %>%
  collect() %>%
  print(width = Inf)
```

```{r}
library(ggplot2)
library(scales)
library(dplyr)

# Assuming dit_ICU_stays is already loaded and contains the correct data

# Make sure the 'value' column is numeric
dit_ICU_stays <- dit_ICU_stays %>%
  mutate(value = as.numeric(value)) 

# Plot the graph
ggplot(data = dit_ICU_stays, aes(x = charttime, y = value, color = abbreviation)) + 
  geom_line() +
  facet_grid(abbreviation ~ stay_id, scales = "free") + # both axes have free scales
  labs(title = paste("Patient", sid, "ICU stays - Vitals"),
       x = "",
       y = "") +
  theme_minimal() +
  theme(legend.title = element_blank(),
        axis.text.x = element_text(hjust = 1, size = 6), 
        axis.text.y = element_text(size = 8)) + 
  scale_x_datetime(labels = date_format("%b %d %H:%M")) +
  scale_y_continuous(labels = comma)
```
## Q2. ICU stays

`icustays.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/icu/icustays/>) contains data about Intensive Care Units (ICU) stays. The first 10 lines are
```{bash}
zcat < ~/mimic/icu/icustays.csv.gz | head
```

### Q2.1 Ingestion

Import `icustays.csv.gz` as a tibble `icustays_tble`. 

```{r}
#|eval = true

icustays_tble <- read_csv("~/mimic/icu/icustays.csv.gz") %>%
  collect() %>%
  print(width = Inf)
```

### Q2.2 Summary and visualization

How many unique `subject_id`? Can a `subject_id` have multiple ICU stays? Summarize the number of ICU stays per `subject_id` by graphs.

***Answer***

```{r}
#|eval = true
# the numer of unique subject_id
icustays_tble %>%
  count(subject_id) %>%
  nrow()
```
There are 46476 unique subject_id.

```{r}
#|eval = true
icustays_sum <- icustays_tble %>%
  group_by(subject_id) %>%
  summarize(n_icu_stays = n_distinct(stay_id)) %>%
  collect() %>%
  print(width = Inf)
```

```{r}
#|eval = true
# the number of ICU stays per `subject_id` by graphs
icustays_plot <- ggplot(icustays_sum, aes(x = n_icu_stays)) +
  geom_bar(fill = "skyblue", color = "black") +
  labs(x = "Number of ICU Stays", y = "Count", 
       title = "Distribution of ICU Stays per Subject") +
  theme_minimal()

print(icustays_plot)
```

## Q3. `admissions` data

Information of the patients admitted into hospital is available in `admissions.csv.gz`. See <https://mimic.mit.edu/docs/iv/modules/hosp/admissions/> for details of each field in this file. The first 10 lines are
```{bash}
zcat < ~/mimic/hosp/admissions.csv.gz | head
```

### Q3.1 Ingestion

Import `admissions.csv.gz` as a tibble `admissions_tble`.

***Answer***
```{r}
#|eval = true
admissions_tble <- read_csv("~/mimic/hosp/admissions.csv.gz") %>%
  collect() %>%
  print(admissions_tble, width = Inf)
```

### Q3.2 Summary and visualization

Summarize the following information by graphics and explain any patterns you see.

- number of admissions per patient  
- admission hour (anything unusual?)  
- admission minute (anything unusual?)  
- length of hospital stay (from admission to discharge) (anything unusual?)  

According to the [MIMIC-IV documentation](https://mimic.mit.edu/docs/iv/about/concepts/#date-shifting), 

> All dates in the database have been shifted to protect patient confidentiality. Dates will be internally consistent for the same patient, but randomly distributed in the future. Dates of birth which occur in the present time are not true dates of birth. Furthermore, dates of birth which occur before the year 1900 occur if the patient is older than 89. In these cases, the patientâ€™s age at their first admission has been fixed to 300.

***Answer***
```{r}
#|eval = true
# summary of admissions
 admissions_summary <- admissions_tble %>%
  mutate(admission_hour = hour(admittime),
         admission_minute = minute(admittime),
         dischtime = as.POSIXct(dischtime),
         admission_length = dischtime - admittime) %>%
  mutate(admission_length_seconds = as.numeric(admission_length)) %>%
  collect()

# Print admissions summary
print(admissions_summary, width = Inf)
```

```{r}
#|eval = true
# number of admissions per patient
admissions_summary %>%
  count(subject_id) %>%
  ggplot(aes(x = n)) +
  geom_bar() +
  labs(x = "Number of Admissions", y = "Number of Patients", 
       title = "Number of Admissions per Patient")

#|eval = true
# admission hour
admissions_summary %>%
  ggplot(aes(x = admission_hour)) +
  geom_histogram(bins = 24) + # Assuming admission_hour is a 24-hour format
  labs(x = "Admission Hour", y = "Count", 
       title = "Distribution of Admission Hours")
#Comment: The number of admissions is lowest at 3am and highest at 2pm

#|eval = true
# admission minute
admissions_summary %>%
  ggplot(aes(x = admission_minute)) +
  geom_histogram(bins = 60) + # Assuming admission_minute ranges from 0 to 59
  labs(x = "Admission Minute", y = "Count", 
       title = "Distribution of Admission Minutes")

# length of hospital stay
#second to day

#|eval = true
admissions_summary %>%
  ggplot(aes(x = admission_length_seconds)) +
  geom_histogram(binwidth = (max(admissions_summary$admission_length_seconds) - min(admissions_summary$admission_length_seconds)) / 30) +
  labs(x = "Length of Stay (Seconds)", y = "Count", 
       title = "Distribution of Length of Hospital Stay")
```

## Q4. `patients` data

Patient information is available in `patients.csv.gz`. See <https://mimic.mit.edu/docs/iv/modules/hosp/patients/> for details of each field in this file. The first 10 lines are
```{bash}
zcat < ~/mimic/hosp/patients.csv.gz | head
```

### Q4.1 Ingestion

Import `patients.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/hosp/patients/>) as a tibble `patients_tble`.

***Answer***
```{r}
#|eval = true
patients_tble <- read_csv("~/mimic/hosp/patients.csv.gz") %>%
  collect() %>%
  print(patients_tble, width = Inf)
```

### Q4.2 Summary and visualization

Summarize variables `gender` and `anchor_age` by graphics, and explain any patterns you see.

#### Answer

```{r}
#|eval = true
# Summary statistics for gender
gender_summary <- patients_tble %>%
  count(gender) 

# Summary statistics for anchor_age
anchor_age_summary <- patients_tble %>%
  summarize(mean_anchor_age = mean(anchor_age),
            median_anchor_age = median(anchor_age),
            min_anchor_age = min(anchor_age),
            max_anchor_age = max(anchor_age))
```

```{r}
#|eval = true
# Visualization
gender_plot <- ggplot(gender_summary, aes(x = gender, y = n)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  labs(x = "Gender", y = "Count", 
       title = "Gender Distribution of Patients") +
  theme_minimal()

print(gender_plot)
```

```{r}
#|eval = true
anchor_age_plot <- ggplot(patients_tble, aes(x = anchor_age)) +
  geom_histogram(binwidth = 5, fill = "skyblue", color = "black") +
  labs(x = "Anchor Age", y = "Count", 
       title = "Distribution of Anchor Age") +
  theme_minimal()

print(anchor_age_plot)
```


## Q5. Lab results

`labevents.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/hosp/labevents/>) contains all laboratory measurements for patients. The first 10 lines are
```{bash}
zcat < ~/mimic/hosp/labevents.csv.gz | head
```

`d_labitems.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/hosp/d_labitems/>) is the dictionary of lab measurements. 
```{bash}
zcat < ~/mimic/hosp/d_labitems.csv.gz | head
```

We are interested in the lab measurements of creatinine (50912), potassium (50971), sodium (50983), chloride (50902), bicarbonate (50882), hematocrit (51221), white blood cell count (51301), and glucose (50931). Retrieve a subset of `labevents.csv.gz` that only containing these items for the patients in `icustays_tble`. Further restrict to the last available measurement (by `storetime`) before the ICU stay. The final `labevents_tble` should have one row per ICU stay and columns for each lab measurement.

![](labevents_tble.png)


Hint: Use the Parquet format you generated in Homework 2. For reproducibility, make `labevents_pq` folder available at the current working directory `hw3`, for example, by a symbolic link.

```{r}

d_labitems <- read_csv("~/mimic/hosp/d_labitems.csv.gz", col_types = cols(
  label = col_character(),
  fluid = col_character(),
  category = col_character(),
  itemid = col_double()  # specify itemid as double to avoid type mismatch during join
))
print(d_labitems, width = Inf)

icustays_tble <- icustays_tble %>%
  mutate(subject_id = as.character(subject_id))

labevents_tble <- arrow::open_dataset("~/labevents.parquet", 
                                      format = "parquet") %>%
  select(subject_id, itemid, valuenum, storetime) %>%
  mutate(subject_id = as.character(subject_id),
         itemid = as.numeric(itemid)) %>%
  filter(subject_id %in% icustays_tble$subject_id) %>%
  filter(itemid %in% c(50912, 50971, 50983, 50902, 
                       50882, 51221, 51301, 50931)) %>%
  collect() %>%
  left_join(icustays_tble, by = "subject_id") %>%
  left_join(d_labitems, by = "itemid") %>%
  select(subject_id, stay_id, itemid, valuenum, storetime, intime, label) %>%
  filter(storetime < intime) %>%
  group_by(subject_id, stay_id, itemid) %>%
  slice_max(order_by = storetime, n = 1) %>%
  ungroup() %>%
  select(subject_id, stay_id, label, valuenum) %>%
  pivot_wider(names_from = label, values_from = valuenum,
              values_fn = list(valuenum = last)) %>%

print(labevents_tble, width = Inf)
```

## Q6. Vitals from charted events

`chartevents.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/icu/chartevents/>) contains all the charted data available for a patient. During their ICU stay, the primary repository of a patientâ€™s information is their electronic chart. The `itemid` variable indicates a single measurement type in the database. The `value` variable is the value measured for `itemid`. The first 10 lines of `chartevents.csv.gz` are
```{bash}
zcat < ~/mimic/icu/chartevents.csv.gz | head
```

`d_items.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/icu/d_items/>) is the dictionary for the `itemid` in `chartevents.csv.gz`. 
```{bash}
zcat < ~/mimic/icu/d_items.csv.gz | head
```

We are interested in the vitals for ICU patients: heart rate (220045), systolic non-invasive blood pressure (220179), diastolic non-invasive blood pressure (220180), body temperature in Fahrenheit (223761), and respiratory rate (220210). Retrieve a subset of `chartevents.csv.gz` only containing these items for the patients in `icustays_tble`. Further restrict to the first vital measurement within the ICU stay. The final `chartevents_tble` should have one row per ICU stay and columns for each vital measurement. 

![](chartevents_tble.png)

Hint: Use the Parquet format you generated in Homework 2. For reproducibility, make `chartevents_pq` folder available at the current working directory, for example, by a symbolic link.

***Answer***
```{r}
#|eval = true
# Import chartevents
d_items <- read_csv("~/mimic/icu/d_items.csv.gz")

# Specify vital signs itemids
vital_itemids <- c(220045, 220179, 220180, 223761, 220210)

# Load chartevents data from Parquet (more efficient for large datasets)
chartevents_tble <- arrow::open_dataset("~/chartevents_pq", format = "parquet") %>%
  filter(itemid %in% vital_itemids) %>%
  collect()

# Ensure subject_id is of the same type in both datasets
icustays_tble <- icustays_tble %>%
  mutate(subject_id = as.character(subject_id))

chartevents_tble <- chartevents_tble %>%
  mutate(subject_id = as.character(subject_id))

# Join chartevents with icustays
chartevents_icustays <- chartevents_tble %>%
  inner_join(icustays_tble, by = c("subject_id", "hadm_id", "stay_id")) %>%
  filter(charttime >= intime & charttime <= outtime)

# Select the first measurement within ICU stay
chartevents_first_meas <- chartevents_icustays %>%
  group_by(subject_id, stay_id, itemid) %>%
  summarise(value = first(value, order_by = charttime), .groups = "drop")

# Pivot to the required format
chartevents_final_tble <- chartevents_first_meas %>%
  pivot_wider(
    id_cols = c(subject_id, stay_id),
    names_from = itemid,
    values_from = value,
    names_prefix = "vital_"
  )
chartevents_final_tble
```

## Q7. Putting things together

Let us create a tibble `mimic_icu_cohort` for all ICU stays, where rows are all ICU stays of adults (age at `intime` >= 18) and columns contain at least following variables

- all variables in `icustays_tble`  
- all variables in `admissions_tble`  
- all variables in `patients_tble`
- the last lab measurements before the ICU stay in `labevents_tble` 
- the first vital measurements during the ICU stay in `chartevents_tble`

The final `mimic_icu_cohort` should have one row per ICU stay and columns for each variable.

![](mimic_icu_cohort.png)

Hint: Use the Parquet format you generated in Homework 2. For reproducibility, make `labevents_pq` and `chartevents_pq` folders available at the current working directory, for example, by a symbolic link.

***Answer***
```{r}
#|eval = true
labevents_tble <- arrow::open_dataset("~/labevents_pq") %>%
  filter(subject_id == mimic_icu_cohort$subject_id & hadm_id == mimic_icu_cohort$hadm_id) %>%
  collect() %>% 
  print(width = Inf)
```

```{r}
#|eval = true
chartevents_tble <- arrow::open_dataset("~/chartevents_pq") %>%
  filter(subject_id == mimic_icu_cohort$subject_id & stay_id == mimic_icu_cohort$stay_id) %>%
  
  collect() %>% 
  print(width = Inf)
```

```{r}
#|eval = true
# Merge icustays_tble, admissions_tble, patients_tble, lab_summary, and chart_summary
mimic_icu_cohort <- icustays_tble %>%
  left_join(patients_tble, by = "subject_id") %>%
  filter(year(intime) - anchor_year + anchor_age >= 18) %>%
  print(width = Inf)
```
```{r}
#|eval = true
mime_icu_cohort <- mimic_icu_cohort %>%
  left_join(admissions_tble, by = "hadm_id") %>%
  print(width = Inf)
```

```{r}
# Assuming mimic_icu_cohort, labevents_tble, and chartevents_tble are already defined

# Filter labevents_tble for the last lab measurement before ICU stay
labevents_filtered <- labevents_tble %>%
  left_join(mimic_icu_cohort %>% select(subject_id, hadm_id, intime), by = c("subject_id", "hadm_id")) %>%
  group_by(subject_id, hadm_id) %>%
  filter(charttime < intime) %>%
  arrange(desc(charttime)) %>%
  slice(1) %>%
  ungroup()

# Step 3: Filter chartevents_tble
# Get the first vital measurement during each ICU stay
chartevents_filtered <- chartevents_tble %>%
  left_join(mimic_icu_cohort %>% select(stay_id, intime), by = "stay_id") %>%
  group_by(stay_id) %>%
  filter(charttime >= intime) %>%
  arrange(charttime) %>%
  slice(1) %>%
  ungroup()

# Step 4: Join the filtered tables with mimic_icu_cohort
final_mimic_icu_cohort <- mimic_icu_cohort %>%
  left_join(labevents_filtered, by = c("subject_id", "hadm_id")) %>%
  left_join(chartevents_filtered, by = "stay_id")

# Print the final table
print(final_mimic_icu_cohort, width = Inf)
```

## Q8. Exploratory data analysis (EDA)

Summarize the following information about the ICU stay cohort `mimic_icu_cohort` using appropriate numerics or graphs:

- Length of ICU stay `los` vs demographic variables (race, insurance, marital_status, gender, age at intime)

- Length of ICU stay `los` vs the last available lab measurements before ICU stay

- Length of ICU stay `los` vs the average vital measurements within the first hour of ICU stay

- Length of ICU stay `los` vs first ICU unit


***Answer***
```{r}
#|eval = false
# Visualization
mimic_icu_cohort %>%
  ggplot(aes(x = anchor_age, y = los)) +
  geom_point() +
  labs(x = "Age at Intime", y = "Length of ICU Stay", 
       title = "Length of ICU Stay vs. Age at Intime")
```

```{r}
#|eval = false
mimic_icu_cohort %>%
  ggplot(aes(x = 
               
               )) +
  geom_point() +
  labs(x = "Race", y = "Length of ICU Stay", 
       title = "Length of ICU Stay vs. Race")
```

```{r}
#|eval = false
mimic_icu_cohort %>%
  ggplot(aes(x = 
               
               )) +
  geom_point() +
  labs(x = "Insurance", y = "Length of ICU Stay", 
       title = "Length of ICU Stay vs. Insurance")
```

```{r}
#|eval = false
mimic_icu_cohort %>%
  ggplot(aes(x = 
               
               )) +
  geom_point() +
  labs(x = "Marital Status", y = "Length of ICU Stay", 
       title = "Length of ICU Stay vs. Marital Status")
```

```{r}
#|eval = false
mimic_icu_cohort %>%
  ggplot(aes(x = 
               
               )) +
  geom_point() +
  labs(x = "Gender", y = "Length of ICU Stay", 
       title = "Length of ICU Stay vs. Gender")
  
```

```{r}
#|eval = false
mimic_icu_cohort %>%
  ggplot(aes(x = 
               
               )) +
  geom_point() +
  labs(x = "Last Available Lab Measurements", y = "Length of ICU Stay", 
       title = "Length of ICU Stay vs. Last Available Lab Measurements")
```

```{r}
#|eval = false
mimic_icu_cohort %>%
  ggplot(aes(x = 
               
               )) +
  geom_point() +
  labs(x = "Average Vital Measurements", y = "Length of ICU Stay", 
       title = "Length of ICU Stay vs. Average Vital Measurements")
```

```{r}
#|eval = false
mimic_icu_cohort %>%
  ggplot(aes(x = 
               
               )) +
  geom_point() +
  labs(x = "First ICU Unit", y = "Length of ICU Stay", 
       title = "Length of ICU Stay vs. First ICU Unit")
```


